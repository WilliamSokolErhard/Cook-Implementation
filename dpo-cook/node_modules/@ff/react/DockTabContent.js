"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const FlexItem_1 = require("./FlexItem");
const DropTarget_1 = require("./DropTarget");
const DockSprite_1 = require("./DockSprite");
class DockTabContentContainer extends React.Component {
    constructor(props) {
        super(props);
        this.onDragEnter = this.onDragEnter.bind(this);
        this.onDragUpdate = this.onDragUpdate.bind(this);
        this.onDragLeave = this.onDragLeave.bind(this);
        this.onDrop = this.onDrop.bind(this);
        this.state = {
            dockArea: "none"
        };
    }
    render() {
        const { className, children } = this.props;
        return (React.createElement(FlexItem_1.default, null,
            React.createElement(DropTarget_1.default, { className: className, style: DockTabContentContainer.style, payloadTypes: ["flow/tab-header"], onDragEnter: this.onDragEnter, onDragUpdate: this.onDragUpdate, onDragLeave: this.onDragLeave, onDrop: this.onDrop }, children),
            React.createElement(DockSprite_1.default, { dockArea: this.state.dockArea })));
    }
    onDragEnter(event) {
        this.updateSprite(event, true);
    }
    onDragUpdate(event) {
        this.updateSprite(event, true);
    }
    onDragLeave(event) {
        this.updateSprite(event, false);
    }
    onDrop(event) {
        const state = this.state;
        const { id, index, onDrop } = this.props;
        if (state.dockArea !== "none" && onDrop) {
            this.props.onDrop({
                sourceTabId: event.payload.id,
                sourceTabIndex: event.payload.index,
                dockArea: state.dockArea,
                id,
                index,
                sender: this
            });
        }
        this.updateSprite(event, false);
    }
    updateSprite(event, isTargeted) {
        let dockArea = "none";
        if (isTargeted) {
            const targetRect = event.dropTarget.getBoundingClientRect();
            const x = (event.clientX - targetRect.left) / targetRect.width;
            const y = (event.clientY - targetRect.top) / targetRect.height;
            if (x > 0.33 && x < 0.67 && y > 0.33 && y < 0.67) {
                dockArea = "center";
            }
            else if (x < y) {
                dockArea = (x + y < 1) ? "left" : "bottom";
            }
            else {
                dockArea = (x + y < 1) ? "top" : "right";
            }
        }
        this.setState({ dockArea });
    }
}
exports.DockTabContentContainer = DockTabContentContainer;
DockTabContentContainer.defaultProps = {
    className: "ff-dock-tab-content-container"
};
DockTabContentContainer.style = {
    position: "absolute",
    top: 0, left: 0, right: 0, bottom: 0
};
//# sourceMappingURL=DockTabContent.js.map