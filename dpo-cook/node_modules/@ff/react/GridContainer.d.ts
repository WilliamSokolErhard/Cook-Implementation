/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { IComponentProps } from "./common";
/** Properties for [[GridContainer]] component. */
export interface IGridContainerProps extends IComponentProps {
    /** How the container is positioned with respect to its parent. Default is "relative". */
    position?: string;
    /** Defines the columns in the grid with a space-separated list of values.  */
    columns?: string;
    /** Defines the rows in the grid with a space-separated list of values.  */
    rows?: string;
    /** Size of additional, auto-created columns.  */
    autoColumns?: string | number;
    /** Size of additional, auto-created rows. */
    autoRows?: string | number;
    /** Size of the gap between columns. */
    columnGap?: string | number;
    /** Size of the gap between rows. */
    rowGap?: string | number;
    /** How items are laid out horizontally. */
    justifyItems?: "start" | "end" | "center" | "stretch";
    /** How items are laid out vertically. */
    alignItems?: "start" | "end" | "center" | "stretch";
    /** How the entire grid content is laid out horizontally. */
    justifyContent?: "start" | "end" | "center" | "stretch" | "space-around" | "space-between" | "space-evenly";
    /** How the entire grid content is laid out vertically. */
    alignContent?: "start" | "end" | "center" | "stretch" | "space-around" | "space-between" | "space-evenly";
}
/**
 * Component applying a grid layout to its children by wrapping them in a div element.
 * This is a React stateless functional component.
 * @param {IGridContainerProps & {children?: React.ReactNode}} props
 * @returns {React.SFC<IGridContainerProps>}
 * @constructor
 */
declare const GridContainer: React.SFC<IGridContainerProps>;
export default GridContainer;
