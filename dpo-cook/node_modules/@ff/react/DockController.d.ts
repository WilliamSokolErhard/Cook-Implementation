/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import Commander from "@ff/core/Commander";
import Controller, { Actions } from "@ff/core/Controller";
export declare type DockArea = "none" | "left" | "top" | "right" | "bottom" | "center";
export interface IDockContainerLayout {
    id: string;
    type: "stack" | "split";
    size: number;
}
export interface IDockStackLayout extends IDockContainerLayout {
    type: "stack";
    activePaneId: string;
    panes: Array<IDockPaneLayout>;
}
export interface IDockSplitLayout extends IDockContainerLayout {
    type: "split";
    direction: "horizontal" | "vertical";
    sections: Array<IDockSplitLayout | IDockStackLayout>;
}
export interface IDockPaneLayout {
    id: string;
    title: string;
    closable?: boolean;
    movable?: boolean;
    componentId: string;
}
export declare type IDockLayout = IDockSplitLayout | IDockStackLayout;
export declare type DockActions = Actions<DockController>;
export default class DockController extends Controller<DockController> {
    protected static readonly defaultLayout: IDockLayout;
    readonly actions: DockActions;
    protected state: IDockLayout;
    constructor(commander: Commander, initialLayout?: IDockLayout);
    createActions(commander: Commander): {
        resize: (sectionId: string, index: number, firstSize: number, secondSize: number) => IDockStackLayout | IDockSplitLayout;
        activatePane: (paneId: string) => IDockStackLayout | IDockSplitLayout;
        insertPane: (anchorId: string, location: DockArea, title: string, closable: boolean, componentId: string) => IDockStackLayout | IDockSplitLayout;
        removePane: (paneId: string) => IDockStackLayout | IDockSplitLayout;
        movePane: (paneId: string, anchorId: string, location: string) => IDockStackLayout | IDockSplitLayout;
    };
    resize(sectionId: string, index: number, firstSize: number, secondSize: number): IDockLayout;
    activatePane(paneId: string): IDockLayout;
    insertPane(anchorId: string, location: DockArea, title: string, closable: boolean, componentId: string): IDockLayout;
    removePane(paneId: string): IDockLayout;
    movePane(paneId: string, anchorId: string, location: string): IDockLayout;
    setState(state: IDockLayout): void;
    getLayout(): IDockLayout;
    protected _isSameDirection(location: string, direction: string): boolean;
    protected _getSection(sectionId: string, layout: IDockLayout): IDockSplitLayout;
    protected _getPath(paneId: string, layout: IDockLayout): any[];
    protected _insertPane(path: any[], location: string, pane: IDockPaneLayout): IDockSplitLayout;
    protected _removePane(path: any[]): any;
}
