"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Button_1 = require("./Button");
const Dialog_1 = require("./Dialog");
/**
 * Button component. Displays its children when pressed.
 */
class PopupButton extends React.Component {
    constructor(props) {
        super(props);
        this.onRefDialog = this.onRefDialog.bind(this);
        this.onTapButton = this.onTapButton.bind(this);
        this.onTapModal = this.onTapModal.bind(this);
        this.dialog = null;
        this.state = {
            popupVisible: false
        };
    }
    render() {
        const props = this.props;
        const popupVisible = this.state.popupVisible;
        return (React.createElement(Dialog_1.default, { ref: this.onRefDialog, id: props.id, anchor: props.anchor, justify: props.justify, align: props.align, portal: props.portal, modal: props.modal, visible: popupVisible, onTapModal: this.onTapModal },
            React.createElement(Dialog_1.Anchor, null,
                React.createElement(Button_1.default, { id: props.id, className: props.className, text: props.text, icon: props.icon, faIcon: props.faIcon, image: props.image, title: props.title, selected: popupVisible, disabled: props.disabled, onTap: this.onTapButton })),
            props.children));
    }
    onRefDialog(dialog) {
        this.dialog = dialog;
    }
    onTapButton(event) {
        this.setState(prevState => ({ popupVisible: !prevState.popupVisible }));
    }
    onTapModal(event) {
        this.setState(prevState => {
            const popupVisible = !prevState.popupVisible;
            // on closing the popup, set the focus to the anchor element
            if (!popupVisible && this.dialog && this.dialog.anchorElement) {
                this.dialog.anchorElement.focus();
            }
            return { popupVisible };
        });
    }
}
exports.default = PopupButton;
PopupButton.defaultProps = {
    className: "ff-popup-button"
};
//# sourceMappingURL=PopupButton.js.map