/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import { ReactElement } from "react";
import Draggable, { IDraggableProps, PointerEvent } from "./Draggable";
export { IDraggablePressEvent, IDraggableReleaseEvent, IDraggableTapEvent, IDraggableDoubleTapEvent } from "./Draggable";
export interface IPointerDragEvent extends PointerEvent {
    payloadType: string;
    payload: any;
    dropTarget: Element;
    dragSource: ReactElement<any>;
}
/** Properties for [[DragSource]] component. */
export interface IDragSourceProps extends IDraggableProps {
    payloadType?: string;
    payload?: any;
    sprite?: ReactElement<any>;
    onDragBegin?: (event: IPointerDragEvent) => void;
    onDragMove?: (event: IPointerDragEvent, dx: number, dy: number) => void;
    onDragEnd?: (event: IPointerDragEvent) => void;
}
export default class DragSource extends Draggable<IDragSourceProps> {
    protected static defaultProps: {
        className: string;
        payloadType: string;
        payload: any;
    };
    spriteElement: HTMLElement;
    dragTarget: Element;
    dropTarget: Element;
    payloadType: string;
    payload: any;
    spriteOffsetX: number;
    spriteOffsetY: number;
    constructor(props: IDragSourceProps);
    render(): JSX.Element;
    protected onDragBegin(event: PointerEvent): void;
    protected onDragMove(event: PointerEvent, dx: number, dy: number): void;
    protected onDragEnd(event: PointerEvent): void;
    private onSprite;
    private initSprite;
    private moveSprite;
    private updateDropTarget;
    private createPointerDragEvent;
}
