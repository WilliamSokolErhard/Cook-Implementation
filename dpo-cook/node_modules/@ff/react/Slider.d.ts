/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { CSSProperties } from "react";
import ManipSource, { IManipListener, IManipEvent } from "./ManipSource";
/** Properties for [[Slider]] component. */
export interface ISliderProps {
    className?: string;
    value?: number;
    min?: number;
    max?: number;
    onChange?: (value: number) => void;
}
export interface ISliderState {
    value: number;
}
export default class Slider extends React.Component<ISliderProps, ISliderState> implements IManipListener {
    static defaultProps: ISliderProps;
    protected sliderElement: HTMLDivElement;
    protected knobElement: HTMLDivElement;
    protected manip: ManipSource;
    protected sliderRect: ClientRect;
    protected knobStyle: CSSProperties;
    constructor(props: ISliderProps);
    componentWillReceiveProps(props: any): void;
    setValue(value: number): void;
    render(): JSX.Element;
    onManipBegin(event: IManipEvent): boolean;
    onManipUpdate(event: IManipEvent): void;
    onManipEnd(event: IManipEvent): void;
    onManipEvent(event: IManipEvent): void;
    protected onRefSlider(element: HTMLDivElement): void;
    protected onRefKnob(element: HTMLDivElement): void;
    protected updateKnobPosition(): void;
}
