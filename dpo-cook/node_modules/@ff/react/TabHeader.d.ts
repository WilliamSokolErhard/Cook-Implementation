/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { CSSProperties } from "react";
import { IComponentEvent, IComponentProps } from "./common";
export interface ITabHeaderContainerProps extends IComponentProps {
}
export declare class TabHeaderContainer extends React.Component<ITabHeaderContainerProps, {}> {
    static readonly defaultProps: Partial<ITabHeaderContainerProps>;
    protected static readonly style: CSSProperties;
    render(): JSX.Element;
}
export interface ITabHeaderSelectEvent extends IComponentEvent<TabHeaderItem> {
}
export interface ITabHeaderCloseEvent extends ITabHeaderSelectEvent {
}
export interface ITabHeaderDropEvent extends IComponentEvent<TabHeaderItem> {
    sourceTabId: string;
    sourceTabIndex: number;
}
export interface ITabHeaderItemProps extends IComponentProps {
    text?: string;
    icon?: string;
    faIcon?: string;
    title?: string;
    closable?: boolean;
    movable?: boolean;
    active?: boolean;
    onSelect?: (event: ITabHeaderSelectEvent) => void;
    onClose?: (event: ITabHeaderCloseEvent) => void;
    onDrop?: (event: ITabHeaderDropEvent) => void;
}
export declare class TabHeaderItem extends React.Component<ITabHeaderItemProps, {}> {
    static defaultProps: {
        className: string;
        active: boolean;
    };
    private static style;
    private static contentStyle;
    private static buttonsStyle;
    constructor(props: ITabHeaderItemProps);
    render(): JSX.Element;
    private onDragEnter;
    private onDragLeave;
    protected onSelect(): void;
    protected onClose(): void;
    private onDrop;
}
