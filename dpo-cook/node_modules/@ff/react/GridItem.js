"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const _defaultStyle = {
    boxSizing: "border-box"
};
/**
 * Wraps its children in a div element. Grid layout settings column, row,
 * columnSpan, rowSpan, justify and align are exposed as component properties. See also [[GridContainer]].
 * This is a React stateless functional component.
 * @param {IGridItemProps & {children?: React.ReactNode}} props
 * @returns {React.SFC<IGridItemProps>}
 * @constructor
 */
const GridItem = function (props) {
    const { className, style, elementRef, column, row, columnSpan, rowSpan, justify, align, children } = props;
    const styles = Object.assign({}, _defaultStyle, style);
    if (column) {
        styles.gridColumnStart = column;
    }
    if (row) {
        styles.gridRowStart = row;
    }
    if (columnSpan) {
        styles.gridColumnEnd = `span ${columnSpan}`;
    }
    if (rowSpan) {
        styles.gridRowEnd = `span ${rowSpan}`;
    }
    if (justify) {
        styles.justifySelf = justify;
    }
    if (align) {
        styles.alignSelf = align;
    }
    return (React.createElement("div", { className: className, style: styles, ref: elementRef }, children));
};
GridItem.defaultProps = {
    className: "ff-grid-item"
};
exports.default = GridItem;
//# sourceMappingURL=GridItem.js.map