/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { IComponentProps } from "./common";
/** Properties for [[FlexContainer]] component. */
export interface IFlexContainerProps extends IComponentProps {
    /** Direction of the flex layout. */
    direction?: "horizontal" | "vertical";
    /** How the container is positioned with respect to its parent. Default is "relative". */
    position?: "relative" | "absolute" | "fill";
    /** How the container's content is laid out along the layout direction. */
    justifyContent?: "flex-start" | "flex-end" | "center" | "space-between" | "space-around" | "space-evenly";
    /** How the container's content is laid out across the layout direction. */
    alignContent?: "stretch" | "center" | "flex-start" | "flex-end";
    /** How the container's items are laid out along the layout direction. */
    alignItems?: "stretch" | "center" | "flex-start" | "flex-end";
    /** Whether overflowing items should be wrapped. */
    wrap?: "nowrap" | "wrap" | "wrap-reverse";
    /** If the container itself is an item in a parent flex layout, this sets its grow property. */
    grow?: number;
    /** If the container itself is an item in a parent flex layout, this sets its shrink property. */
    shrink?: number;
    /** If the container itself is an item in a parent flex layout, this sets its basis property. */
    basis?: string;
}
/**
 * Component applying a flex layout to its children by wrapping them in a div element.
 * This is a React stateless functional component.
 * @param {IFlexContainerProps & {children?: React.ReactNode}} props
 * @returns {React.SFC<IFlexContainerProps>}
 * @constructor
 */
declare const FlexContainer: React.SFC<IFlexContainerProps>;
export default FlexContainer;
