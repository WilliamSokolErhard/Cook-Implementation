"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const _defaultStyle = {
    boxSizing: "border-box",
    display: "flex"
};
/**
 * Component applying a flex layout to its children by wrapping them in a div element.
 * This is a React stateless functional component.
 * @param {IFlexContainerProps & {children?: React.ReactNode}} props
 * @returns {React.SFC<IFlexContainerProps>}
 * @constructor
 */
const FlexContainer = function (props) {
    const { className, style, direction, position, justifyContent, alignContent, alignItems, wrap, grow, shrink, basis, children } = props;
    const classes = className + " ff-" + direction;
    const styles = Object.assign({}, _defaultStyle, style);
    styles.flexDirection = direction === "vertical" ? "column" : "row";
    if (justifyContent) {
        styles.justifyContent = justifyContent;
    }
    if (alignContent) {
        styles.alignContent = alignContent;
    }
    if (alignItems) {
        styles.alignItems = alignItems;
    }
    if (wrap) {
        styles.flexWrap = wrap;
    }
    switch (position) {
        case "fill":
            styles.position = "absolute";
            styles.top = 0;
            styles.right = 0;
            styles.bottom = 0;
            styles.left = 0;
            break;
        case "relative":
            styles.position = "relative";
            styles.flex = `${grow} ${shrink} ${basis}`;
            break;
        case "absolute":
            styles.position = "absolute";
            break;
    }
    return (React.createElement("div", { className: classes, style: styles }, children));
};
FlexContainer.defaultProps = {
    className: "ff-flex-container",
    direction: "horizontal",
    position: "relative",
    grow: 1,
    shrink: 1,
    basis: "auto"
};
exports.default = FlexContainer;
//# sourceMappingURL=FlexContainer.js.map