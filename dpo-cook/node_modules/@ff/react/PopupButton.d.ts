/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { IButtonTapEvent } from "./Button";
import Dialog, { IDialogProps, IDialogTapModal } from "./Dialog";
/** Properties for [[PopupButton]] component. */
export interface IPopupButtonProps extends IDialogProps {
    text?: string;
    /** Class(es) for a custom icon. */
    icon?: string;
    /** Name of a Font Awesome icon. Expanded into classes "fa fa-<icon>" */
    faIcon?: string;
    /** URL of an image to display with the button. */
    image?: string;
    /** Title appears when hovering over the button. */
    title?: string;
    /** When set to true, button appears in disabled state. Default is false. */
    disabled?: boolean;
    /** Element receives the focus after mounting if true. */
    focused?: boolean;
}
export interface IPopupButtonState {
    popupVisible: boolean;
}
/**
 * Button component. Displays its children when pressed.
 */
export default class PopupButton extends React.Component<IPopupButtonProps, IPopupButtonState> {
    static readonly defaultProps: IPopupButtonProps;
    protected dialog: Dialog;
    constructor(props: IPopupButtonProps);
    render(): JSX.Element;
    protected onRefDialog(dialog: Dialog): void;
    protected onTapButton(event: IButtonTapEvent): void;
    protected onTapModal(event: IDialogTapModal): void;
}
