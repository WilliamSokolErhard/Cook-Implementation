/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import * as React from "react";
import { IComponentEvent, IComponentProps } from "./common";
import { IButtonTapEvent } from "./Button";
export interface ISelectionGroupSelectEvent extends IComponentEvent<SelectionGroup> {
    selectionId: string;
    selectionIndex: number;
}
/** Properties for [[SelectionGroup]] component */
export interface ISelectionGroupProps extends IComponentProps {
    mode?: "radio" | "exclusive";
    selectionIndex?: number;
    shape?: "square" | "circle";
    onSelect?: (event: ISelectionGroupSelectEvent) => void;
}
export interface ISelectionGroupState {
    selectionIndex: number;
}
/**
 * Wrapper for a group of [[Button]] or [[Checkbox]] components. Provides selection modes
 * "radio" for radio buttons and "exclusive" for situations when at most one child component can be selected.
 */
export default class SelectionGroup extends React.Component<ISelectionGroupProps, ISelectionGroupState> {
    static defaultProps: ISelectionGroupProps;
    constructor(props: ISelectionGroupProps);
    setSelected(selectionIndex: number, selectionId: string): void;
    render(): JSX.Element;
    protected onButtonTap(event: IButtonTapEvent): void;
}
