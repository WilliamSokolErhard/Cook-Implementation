/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import { IManipEventHandler, IPointerEvent, ITriggerEvent } from "./ManipTarget";
declare type ManipMode = "off" | "pan" | "orbit" | "dolly" | "zoom" | "pan-dolly" | "roll";
declare type ManipPhase = "off" | "active" | "release";
export interface IDeltaOrbitManip {
    dX: number;
    dY: number;
    dScale: number;
    dPitch: number;
    dHead: number;
    dRoll: number;
}
export default class OrbitManip implements IManipEventHandler {
    protected mode: ManipMode;
    protected phase: ManipPhase;
    protected prevPinchDist: number;
    protected deltaX: number;
    protected deltaY: number;
    protected deltaPinch: number;
    protected deltaWheel: number;
    protected deltaOrbit: IDeltaOrbitManip;
    constructor();
    getDeltaPose(): IDeltaOrbitManip;
    onPointer(event: IPointerEvent): boolean;
    onTrigger(event: ITriggerEvent): boolean;
    protected setDeltaOrbit(): void;
    protected getModeFromEvent(event: IPointerEvent): ManipMode;
}
export {};
