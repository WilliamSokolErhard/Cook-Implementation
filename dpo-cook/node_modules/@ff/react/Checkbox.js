"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
const Button_1 = require("./Button");
/**
 * Checkbox component, based on the [[Button]] component. Works with mouse and touch input.
 * Use the shape property to style the Checkbox as square box or circular radio button.
 * Provides a text label and support for custom and Font Awesome icons.
 */
class Checkbox extends Button_1.default {
    render() {
        const { className, style, text, icon, faIcon, image, title, shape, children } = this.props;
        const selectedClass = this.state.selected ? " ff-selected" : "";
        const checkboxClasses = className + " " + shape + selectedClass;
        const frameClasses = "ff-frame" + selectedClass;
        const labelStyle = Object.assign({}, Checkbox.labelStyle, style);
        const frameStyle = shape === "square" ? Checkbox.squareFrameStyle : Checkbox.circleFrameStyle;
        const markStyle = shape === "square" ? Checkbox.squareMarkStyle : Checkbox.circleMarkStyle;
        const contentStyle = Button_1.default.contentStyle;
        const props = {
            className: checkboxClasses,
            style: labelStyle,
            title: title,
            tabIndex: 0,
            "touch-action": "none",
            onPointerDown: this.onPointerDown,
            onPointerUp: this.onPointerUp,
            onPointerCancel: this.onPointerCancel,
            onKeyUp: this.onKeyUp
        };
        return (React.createElement("div", Object.assign({}, props),
            icon ? React.createElement("span", { className: "ff-content ff-icon " + icon, style: contentStyle }) : null,
            faIcon ? React.createElement("span", { className: "ff-content ff-icon fa fa-" + faIcon, style: contentStyle }) : null,
            image ? React.createElement("img", { className: "ff-content ff-image", src: image, style: contentStyle }) : null,
            text ? React.createElement("span", { className: "ff-content ff-text", style: contentStyle }, text) : null,
            children,
            React.createElement("div", { className: frameClasses, style: frameStyle }),
            this.state.selected ? React.createElement("div", { className: "ff-mark", style: markStyle }) : null));
    }
}
exports.default = Checkbox;
Checkbox.defaultProps = {
    className: "ff-control ff-checkbox",
    selectable: true,
    shape: "square"
};
Checkbox.labelStyle = {
    touchAction: "none",
    userSelect: "none",
    cursor: "pointer",
    position: "relative",
    boxSizing: "border-box",
    paddingLeft: "1.65em",
};
Checkbox.squareFrameStyle = {
    position: "absolute",
    top: "0.1em",
    left: "0",
    height: "1.3em",
    width: "1.3em",
    boxSizing: "border-box",
    borderStyle: "solid",
    borderWidth: "1px"
};
Checkbox.squareMarkStyle = {
    position: "absolute",
    top: "0.2em",
    left: "0.4em",
    width: "0.3em",
    height: "0.6em",
    borderStyle: "solid",
    borderWidth: "0 0.2em 0.2em 0",
    transform: "rotate(45deg)"
};
Checkbox.circleFrameStyle = {
    position: "absolute",
    top: "0.1em",
    left: "0",
    height: "1.3em",
    width: "1.3em",
    boxSizing: "border-box",
    borderStyle: "solid",
    borderWidth: "2px",
    borderRadius: "2em"
};
Checkbox.circleMarkStyle = {
    position: "absolute",
    top: "0",
    left: "0",
    width: "0",
    height: "0"
};
//# sourceMappingURL=Checkbox.js.map