"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2018 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const React = require("react");
class LineEdit extends React.Component {
    constructor(props) {
        super(props);
        this.onRef = this.onRef.bind(this);
        this.onChange = this.onChange.bind(this);
        this.onFocus = this.onFocus.bind(this);
        this.onBlur = this.onBlur.bind(this);
    }
    render() {
        const { className, style, placeholder } = this.props;
        return (React.createElement("input", { key: this.props.text, className: className, style: style, defaultValue: this.props.text, placeholder: placeholder, ref: this.onRef, onChange: this.onChange, onFocus: this.onFocus, onBlur: this.onBlur }));
    }
    onRef(element) {
        this.element = element;
        if (element) {
            if (this.props.focused) {
                element.focus();
            }
            if (this.props.selected) {
                element.setSelectionRange(0, element.value.length);
            }
        }
    }
    onFocus() {
        const { id, index, onFocus } = this.props;
        if (onFocus) {
            onFocus({ text: this.element.value, id, index, sender: this });
        }
    }
    onBlur() {
        const { id, index, onBlur } = this.props;
        if (onBlur) {
            onBlur({ text: this.element.value, id, index, sender: this });
        }
    }
    onChange() {
        const { id, index, onChange } = this.props;
        if (onChange) {
            onChange({ text: this.element.value, id, index, sender: this });
        }
    }
}
exports.default = LineEdit;
LineEdit.defaultProps = {
    className: "ff-control ff-line-edit"
};
//# sourceMappingURL=LineEdit.js.map