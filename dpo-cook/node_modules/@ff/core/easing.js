"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2019 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
const PI = Math.PI;
const HALF_PI = PI * 0.5;
var EEasingCurve;
(function (EEasingCurve) {
    EEasingCurve[EEasingCurve["Linear"] = 0] = "Linear";
    EEasingCurve[EEasingCurve["EaseQuad"] = 1] = "EaseQuad";
    EEasingCurve[EEasingCurve["EaseInQuad"] = 2] = "EaseInQuad";
    EEasingCurve[EEasingCurve["EaseOutQuad"] = 3] = "EaseOutQuad";
    EEasingCurve[EEasingCurve["EaseCubic"] = 4] = "EaseCubic";
    EEasingCurve[EEasingCurve["EaseInCubic"] = 5] = "EaseInCubic";
    EEasingCurve[EEasingCurve["EaseOutCubic"] = 6] = "EaseOutCubic";
    EEasingCurve[EEasingCurve["EaseQuart"] = 7] = "EaseQuart";
    EEasingCurve[EEasingCurve["EaseInQuart"] = 8] = "EaseInQuart";
    EEasingCurve[EEasingCurve["EaseOutQuart"] = 9] = "EaseOutQuart";
    EEasingCurve[EEasingCurve["EaseQuint"] = 10] = "EaseQuint";
    EEasingCurve[EEasingCurve["EaseInQuint"] = 11] = "EaseInQuint";
    EEasingCurve[EEasingCurve["EaseOutQuint"] = 12] = "EaseOutQuint";
    EEasingCurve[EEasingCurve["EaseSine"] = 13] = "EaseSine";
    EEasingCurve[EEasingCurve["EaseInSine"] = 14] = "EaseInSine";
    EEasingCurve[EEasingCurve["EaseOutSine"] = 15] = "EaseOutSine";
})(EEasingCurve = exports.EEasingCurve || (exports.EEasingCurve = {}));
function getEasingFunction(curve) {
    return exports.easingFunctions[EEasingCurve[curve]];
}
exports.getEasingFunction = getEasingFunction;
exports.easingFunctions = {
    Linear: function (t) { return t; },
    EaseQuad: function (t) { return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t; },
    EaseInQuad: function (t) { return t * t; },
    EaseOutQuad: function (t) { return t * (2 - t); },
    EaseCubic: function (t) { return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1; },
    EaseInCubic: function (t) { return t * t * t; },
    EaseOutCubic: function (t) { return (--t) * t * t + 1; },
    EaseQuart: function (t) { return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t; },
    EaseInQuart: function (t) { return t * t * t * t; },
    EaseOutQuart: function (t) { return 1 - (--t) * t * t * t; },
    EaseQuint: function (t) { return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t; },
    EaseInQuint: function (t) { return t * t * t * t * t; },
    EaseOutQuint: function (t) { return 1 + (--t) * t * t * t * t; },
    EaseSine: function (t) { return -0.5 * (Math.cos(t * PI) - 1); },
    EaseInSine: function (t) { return 1 - Math.cos(t * HALF_PI); },
    EaseOutSine: function (t) { return Math.sin(t * HALF_PI); },
};
//# sourceMappingURL=easing.js.map