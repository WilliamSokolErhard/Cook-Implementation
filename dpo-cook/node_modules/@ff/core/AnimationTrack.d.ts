/**
 * FF Typescript Foundation Library
 * Copyright 2019 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
import SortedArray from "./SortedArray";
export interface IKey<T = any> {
    time: number;
    value: T;
}
export interface IKeyPair<K extends IKey> {
    left: K;
    right: K;
}
/**
 * Base class for a track containing keyframes
 */
export default class AnimationTrack<T = any, K extends IKey<T> = IKey<T>> {
    readonly keys: SortedArray<K>;
    protected defaultValue: T;
    protected changed: boolean;
    constructor();
    get length(): number;
    empty(): boolean;
    setDefaultValue(value: T): void;
    insert(time: number, value: T): void;
    insertKey(key: K): void;
    removeKey(key: K): boolean;
    removeKeyAt(time: number): boolean;
    valueAt(time: number): T;
    keysAround(time: number, result?: IKeyPair<K>): IKeyPair<K>;
    leftKey(time: number): K;
}
