"use strict";
/**
 * FF Typescript Foundation Library
 * Copyright 2019 Ralph Wiedemeier, Frame Factory GmbH
 *
 * License: MIT
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Returns a deep clone of the given object. Handles plain objects, arrays, typed arrays,
 * dates, functions. Custom objects with default constructors are copied as well, without warranty.
 * Functions are copied by reference only.
 * @param source {any} The source object.
 * @returns {any} A deep clone of the source object.
 */
function clone(source) {
    // null, undefined, primitive values and functions
    if (source === null || typeof (source) !== "object") {
        return source;
    }
    let copy;
    // standard arrays
    if (Array.isArray(source)) {
        copy = [];
        for (let i = 0, n = source.length; i < n; ++i) {
            copy[i] = clone(source[i]);
        }
        return copy;
    }
    // typed arrays
    if (source.BYTES_PER_ELEMENT !== undefined) {
        return source.slice();
    }
    // date
    if (source instanceof Date) {
        return new Date(source);
    }
    // plain objects
    if (source.constructor === Object) {
        copy = {};
        for (let key in source) {
            if (source.hasOwnProperty(key)) {
                copy[key] = clone(source[key]);
            }
        }
        return copy;
    }
    // objects with custom constructors: return a reference
    return source;
}
exports.default = clone;
//# sourceMappingURL=clone.js.map